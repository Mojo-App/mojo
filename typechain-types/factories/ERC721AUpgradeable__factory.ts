/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  ERC721AUpgradeable,
  ERC721AUpgradeableInterface,
} from "../ERC721AUpgradeable";

const _abi = [
  {
    inputs: [],
    name: "ApprovalCallerNotOwnerNorApproved",
    type: "error",
  },
  {
    inputs: [],
    name: "ApprovalQueryForNonexistentToken",
    type: "error",
  },
  {
    inputs: [],
    name: "ApproveToCaller",
    type: "error",
  },
  {
    inputs: [],
    name: "BalanceQueryForZeroAddress",
    type: "error",
  },
  {
    inputs: [],
    name: "MintERC2309QuantityExceedsLimit",
    type: "error",
  },
  {
    inputs: [],
    name: "MintToZeroAddress",
    type: "error",
  },
  {
    inputs: [],
    name: "MintZeroQuantity",
    type: "error",
  },
  {
    inputs: [],
    name: "OwnerQueryForNonexistentToken",
    type: "error",
  },
  {
    inputs: [],
    name: "OwnershipNotInitializedForExtraData",
    type: "error",
  },
  {
    inputs: [],
    name: "TransferCallerNotOwnerNorApproved",
    type: "error",
  },
  {
    inputs: [],
    name: "TransferFromIncorrectOwner",
    type: "error",
  },
  {
    inputs: [],
    name: "TransferToNonERC721ReceiverImplementer",
    type: "error",
  },
  {
    inputs: [],
    name: "TransferToZeroAddress",
    type: "error",
  },
  {
    inputs: [],
    name: "URIQueryForNonexistentToken",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "approved",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "ApprovalForAll",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "fromTokenId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "toTokenId",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
    ],
    name: "ConsecutiveTransfer",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "getApproved",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
    ],
    name: "isApprovedForAll",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "ownerOf",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "_data",
        type: "bytes",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "setApprovalForAll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "tokenURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50611a09806100206000396000f3fe608060405234801561001057600080fd5b50600436106100ea5760003560e01c80636352211e1161008c578063a22cb46511610066578063a22cb4651461025d578063b88d4fde14610279578063c87b56dd14610295578063e985e9c5146102c5576100ea565b80636352211e146101df57806370a082311461020f57806395d89b411461023f576100ea565b8063095ea7b3116100c8578063095ea7b31461016d57806318160ddd1461018957806323b872dd146101a757806342842e0e146101c3576100ea565b806301ffc9a7146100ef57806306fdde031461011f578063081812fc1461013d575b600080fd5b610109600480360381019061010491906112d8565b6102f5565b6040516101169190611320565b60405180910390f35b610127610387565b60405161013491906113d4565b60405180910390f35b6101576004803603810190610152919061142c565b610422565b604051610164919061149a565b60405180910390f35b610187600480360381019061018291906114e1565b6104aa565b005b6101916105f7565b60405161019e9190611530565b60405180910390f35b6101c160048036038101906101bc919061154b565b610620565b005b6101dd60048036038101906101d8919061154b565b61097b565b005b6101f960048036038101906101f4919061142c565b61099b565b604051610206919061149a565b60405180910390f35b6102296004803603810190610224919061159e565b6109ad565b6040516102369190611530565b60405180910390f35b610247610a6f565b60405161025491906113d4565b60405180910390f35b610277600480360381019061027291906115f7565b610b0a565b005b610293600480360381019061028e919061176c565b610c8b565b005b6102af60048036038101906102aa919061142c565b610cfe565b6040516102bc91906113d4565b60405180910390f35b6102df60048036038101906102da91906117ef565b610d9d565b6040516102ec9190611320565b60405180910390f35b60006301ffc9a760e01b827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916148061035057506380ac58cd60e01b827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916145b806103805750635b5e139f60e01b827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916145b9050919050565b6060610391610e3a565b600201805461039f9061185e565b80601f01602080910402602001604051908101604052809291908181526020018280546103cb9061185e565b80156104185780601f106103ed57610100808354040283529160200191610418565b820191906000526020600020905b8154815290600101906020018083116103fb57829003601f168201915b5050505050905090565b600061042d82610e67565b610463576040517fcf4700e400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b61046b610e3a565b600601600083815260200190815260200160002060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b60006104b58261099b565b90508073ffffffffffffffffffffffffffffffffffffffff166104d6610ed8565b73ffffffffffffffffffffffffffffffffffffffff161461053957610502816104fd610ed8565b610d9d565b610538576040517fcfb3b94200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5b82610542610e3a565b600601600084815260200190815260200160002060000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550818373ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a4505050565b6000610601610ee0565b610609610e3a565b60010154610615610e3a565b600001540303905090565b600061062b82610ee5565b90508373ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614610692576040517fa114810000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60008061069e84610fce565b915091506106b481876106af610ed8565b610ffe565b610700576106c9866106c4610ed8565b610d9d565b6106ff576040517f59c896be00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5b600073ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff161415610767576040517fea553b3400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6107748686866001611042565b801561077f57600082555b610787610e3a565b60050160008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000815460019003919050819055506107de610e3a565b60050160008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600081546001019190508190555061085f8561083b888887611048565b7c020000000000000000000000000000000000000000000000000000000017611070565b610867610e3a565b60040160008681526020019081526020016000208190555060007c02000000000000000000000000000000000000000000000000000000008416141561090b57600060018501905060006108b9610e3a565b6004016000838152602001908152602001600020541415610909576108dc610e3a565b60000154811461090857836108ef610e3a565b6004016000838152602001908152602001600020819055505b5b505b838573ffffffffffffffffffffffffffffffffffffffff168773ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a4610973868686600161109b565b505050505050565b61099683838360405180602001604052806000815250610c8b565b505050565b60006109a682610ee5565b9050919050565b60008073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415610a15576040517f8f4eb60400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b67ffffffffffffffff610a26610e3a565b60050160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054169050919050565b6060610a79610e3a565b6003018054610a879061185e565b80601f0160208091040260200160405190810160405280929190818152602001828054610ab39061185e565b8015610b005780601f10610ad557610100808354040283529160200191610b00565b820191906000526020600020905b815481529060010190602001808311610ae357829003601f168201915b5050505050905090565b610b12610ed8565b73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415610b77576040517fb06307db00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b80610b80610e3a565b6007016000610b8d610ed8565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055508173ffffffffffffffffffffffffffffffffffffffff16610c3a610ed8565b73ffffffffffffffffffffffffffffffffffffffff167f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c3183604051610c7f9190611320565b60405180910390a35050565b610c96848484610620565b60008373ffffffffffffffffffffffffffffffffffffffff163b14610cf857610cc1848484846110a1565b610cf7576040517fd1a57ed600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5b50505050565b6060610d0982610e67565b610d3f576040517fa14c4b5000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000610d496111f2565b9050600081511415610d6a5760405180602001604052806000815250610d95565b80610d7484611209565b604051602001610d859291906118cc565b6040516020818303038152906040525b915050919050565b6000610da7610e3a565b60070160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b6000807f2569078dfb4b0305704d3008e7403993ae9601b85f7ae5e742de3de8f8011c4090508091505090565b600081610e72610ee0565b11158015610e8a5750610e83610e3a565b6000015482105b8015610ed1575060007c0100000000000000000000000000000000000000000000000000000000610eb9610e3a565b60040160008581526020019081526020016000205416145b9050919050565b600033905090565b600090565b60008082905080610ef4610ee0565b11610f9757610f01610e3a565b60000154811015610f96576000610f16610e3a565b600401600083815260200190815260200160002054905060007c010000000000000000000000000000000000000000000000000000000082161415610f94575b6000811415610f8a57610f67610e3a565b600401600083600190039350838152602001908152602001600020549050610f56565b8092505050610fc9565b505b5b6040517fdf2d9b4200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b919050565b6000806000610fdb610e3a565b600601600085815260200190815260200160002090508092508254915050915091565b600073ffffffffffffffffffffffffffffffffffffffff8316925073ffffffffffffffffffffffffffffffffffffffff821691508382148383141790509392505050565b50505050565b60008060e883901c905060e861105f868684611263565b62ffffff16901b9150509392505050565b600073ffffffffffffffffffffffffffffffffffffffff83169250814260a01b178317905092915050565b50505050565b60008373ffffffffffffffffffffffffffffffffffffffff1663150b7a026110c7610ed8565b8786866040518563ffffffff1660e01b81526004016110e99493929190611945565b6020604051808303816000875af192505050801561112557506040513d601f19601f8201168201806040525081019061112291906119a6565b60015b61119f573d8060008114611155576040519150601f19603f3d011682016040523d82523d6000602084013e61115a565b606091505b50600081511415611197576040517fd1a57ed600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b805181602001fd5b63150b7a0260e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191614915050949350505050565b606060405180602001604052806000815250905090565b60606080604051019050806040528082600183039250600a81066030018353600a810490505b801561124f57600183039250600a81066030018353600a8104905061122f565b508181036020830392508083525050919050565b60009392505050565b6000604051905090565b600080fd5b600080fd5b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b6112b581611280565b81146112c057600080fd5b50565b6000813590506112d2816112ac565b92915050565b6000602082840312156112ee576112ed611276565b5b60006112fc848285016112c3565b91505092915050565b60008115159050919050565b61131a81611305565b82525050565b60006020820190506113356000830184611311565b92915050565b600081519050919050565b600082825260208201905092915050565b60005b8381101561137557808201518184015260208101905061135a565b83811115611384576000848401525b50505050565b6000601f19601f8301169050919050565b60006113a68261133b565b6113b08185611346565b93506113c0818560208601611357565b6113c98161138a565b840191505092915050565b600060208201905081810360008301526113ee818461139b565b905092915050565b6000819050919050565b611409816113f6565b811461141457600080fd5b50565b60008135905061142681611400565b92915050565b60006020828403121561144257611441611276565b5b600061145084828501611417565b91505092915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061148482611459565b9050919050565b61149481611479565b82525050565b60006020820190506114af600083018461148b565b92915050565b6114be81611479565b81146114c957600080fd5b50565b6000813590506114db816114b5565b92915050565b600080604083850312156114f8576114f7611276565b5b6000611506858286016114cc565b925050602061151785828601611417565b9150509250929050565b61152a816113f6565b82525050565b60006020820190506115456000830184611521565b92915050565b60008060006060848603121561156457611563611276565b5b6000611572868287016114cc565b9350506020611583868287016114cc565b925050604061159486828701611417565b9150509250925092565b6000602082840312156115b4576115b3611276565b5b60006115c2848285016114cc565b91505092915050565b6115d481611305565b81146115df57600080fd5b50565b6000813590506115f1816115cb565b92915050565b6000806040838503121561160e5761160d611276565b5b600061161c858286016114cc565b925050602061162d858286016115e2565b9150509250929050565b600080fd5b600080fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6116798261138a565b810181811067ffffffffffffffff8211171561169857611697611641565b5b80604052505050565b60006116ab61126c565b90506116b78282611670565b919050565b600067ffffffffffffffff8211156116d7576116d6611641565b5b6116e08261138a565b9050602081019050919050565b82818337600083830152505050565b600061170f61170a846116bc565b6116a1565b90508281526020810184848401111561172b5761172a61163c565b5b6117368482856116ed565b509392505050565b600082601f83011261175357611752611637565b5b81356117638482602086016116fc565b91505092915050565b6000806000806080858703121561178657611785611276565b5b6000611794878288016114cc565b94505060206117a5878288016114cc565b93505060406117b687828801611417565b925050606085013567ffffffffffffffff8111156117d7576117d661127b565b5b6117e38782880161173e565b91505092959194509250565b6000806040838503121561180657611805611276565b5b6000611814858286016114cc565b9250506020611825858286016114cc565b9150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b6000600282049050600182168061187657607f821691505b6020821081141561188a5761188961182f565b5b50919050565b600081905092915050565b60006118a68261133b565b6118b08185611890565b93506118c0818560208601611357565b80840191505092915050565b60006118d8828561189b565b91506118e4828461189b565b91508190509392505050565b600081519050919050565b600082825260208201905092915050565b6000611917826118f0565b61192181856118fb565b9350611931818560208601611357565b61193a8161138a565b840191505092915050565b600060808201905061195a600083018761148b565b611967602083018661148b565b6119746040830185611521565b8181036060830152611986818461190c565b905095945050505050565b6000815190506119a0816112ac565b92915050565b6000602082840312156119bc576119bb611276565b5b60006119ca84828501611991565b9150509291505056fea26469706673582212200143ecaa3a7b4c3f7126ea28e20df93f9dc3df3eb4e427cee390b88a57de5c8264736f6c634300080c0033";

export class ERC721AUpgradeable__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ERC721AUpgradeable> {
    return super.deploy(overrides || {}) as Promise<ERC721AUpgradeable>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): ERC721AUpgradeable {
    return super.attach(address) as ERC721AUpgradeable;
  }
  connect(signer: Signer): ERC721AUpgradeable__factory {
    return super.connect(signer) as ERC721AUpgradeable__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ERC721AUpgradeableInterface {
    return new utils.Interface(_abi) as ERC721AUpgradeableInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ERC721AUpgradeable {
    return new Contract(address, _abi, signerOrProvider) as ERC721AUpgradeable;
  }
}
